// Database Connector Configuration
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// LOCATION SCHEMA
// Hierarchy of Region -> Site Group(s) -> Site
// Sites will have many attributes, groups allow targeting
// changes based on arbitrary groupings. Each site will
// have table groups and tables. 

model Region {
  id     Int         @id @default(autoincrement())
  name   String      @unique
  groups SiteGroup[]
}

model SiteGroup {
  id       Int         @id @default(autoincrement())
  name     String      @unique
  regionID Int
  region   Region      @relation(fields: [regionID], references: [id])
  sites    Site[]
  parentID Int?
  parent   SiteGroup?  @relation("SiteGroup_Nest", fields: [parentID], references: [id])
  children SiteGroup[] @relation("SiteGroup_Nest")
}

model Site {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  siteGroupID Int
  siteGroup   SiteGroup    @relation(fields: [siteGroupID], references: [id])
  tableGroups TableGroup[]
}

model TableGroup {
  id       Int          @id @default(autoincrement())
  name     String       @unique
  siteID   Int
  site     Site         @relation(fields: [siteID], references: [id])
  parentID Int?
  parent   TableGroup?  @relation("TableGroup_Nest", fields: [parentID], references: [id])
  children TableGroup[] @relation("TableGroup_Nest")
  tables   Table[]
}

model Table {
  id      Int        @id @default(autoincrement())
  name    String     @unique
  groupID Int
  group   TableGroup @relation(fields: [groupID], references: [id])
}

// TECHNOLOGY SCHEMA
// Includes configuration information for servers,
// workstations, printers, etc. All items belong to
// a site, and optionally a table group.


// USER SCHEMA
// All information stored about users of the system.
// Attributes may be managed by managers, or pull from
// a directory service such as AAD or Google Workspace.


// TICKET SCHEMA
// A ticket includes order information, table (or bar),
// payment information, and optionally contact info
// for the owner of the tab. This is the base unit
// for order management.